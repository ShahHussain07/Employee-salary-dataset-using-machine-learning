# Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

# 1. Load the dataset from the Excel file
df = pd.read_excel('employee_salary_dataset.xlsx')  # Replace with the actual file path if different

# 2. Split the data into features (X) and target (y)
X = df[['YearsExperience']]  # Features (Years of Experience)
y = df['Salary']  # Target variable (Salary)

# 3. Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 4. Initialize and train the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# 5. Make predictions on the test set
y_pred = model.predict(X_test)

# 6. Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f'Mean Squared Error: {mse:.2f}')
print(f'RÂ² Score: {r2:.2f}')

# 7. Visualize the results (Actual vs Predicted salaries)
plt.figure(figsize=(6,4))
plt.scatter(X_test, y_test, color='blue', label='Actual Salary')
plt.plot(X_test, y_pred, color='red', linestyle='--', lw=2, label='Predicted Salary')  # Predicted line
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.title('Actual vs Predicted Salaries')
plt.legend()
plt.show()

# 8. Print the model coefficient and intercept
print("\nModel Coefficient (Slope):", model.coef_[0])
print("Model Intercept:", model.intercept_)
